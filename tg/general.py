from telegram.ext import Application
from telegram.constants import ParseMode
from utils.utils import *
from tg.constants import BOT_START_NOTIFICATION
from scheduler.scheduler_holder import SchedulerHolder

async def on_startup(application: Application):
    try:
        SchedulerHolder.init_scheduler()

        channel_id = get_channel_id()
        if not channel_id:
            print("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: TELEGRAM_CHANNEL_ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env, —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            return
            
        bot = application.bot
        message = BOT_START_NOTIFICATION.format(date = datetime.datetime.now(), bot_id = bot.id, bot_username = bot.username)
        await bot.send_message(
            chat_id=channel_id,
            text=message,
            parse_mode=ParseMode.HTML
        )
        print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")


async def on_shutdown(application: Application):
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
    SchedulerHolder.stop_scheduler()
    print("üî¥ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

